spring.application.name=api
server.port=8080

# 데이터베이스 설정
spring.datasource.url=jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
spring.datasource.username={DATABASE_USERNAME}
spring.datasource.password={DATABASE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.use_sql_comments=true

# HTTP 요청 로그
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# CI/CD 환경 최적화 설정
# 병렬 실행
org.gradle.parallel=true
# 데몬 비활성화
org.gradle.daemon=false

# GitHub Actions의 Ubuntu runner(워크스페이스) 스펙 (2코어, 7GB RAM)
# JVM 최대 힙 메모리를 5GB로 설정
# 메타스페이스(클래스 메타데이터) 최대 크기 512MB
# OOM 발생 시 힙 덤프 파일 생성
org.gradle.jvmargs=-Xmx5g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError

# 일하는 CPU의 최대 수
org.gradle.workers.max=2